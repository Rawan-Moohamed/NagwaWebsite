package Tests;

import io.qameta.allure.Description;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.example.OpenPage;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;


public class OpenTest extends BaseTest {
    OpenPage openPage = new OpenPage(driver);
    SoftAssert softAssert = new SoftAssert();

    @Test(priority = 0, enabled = true)
    @Description("Check for english language of home page from language dropdown list")
    @Severity(SeverityLevel.BLOCKER)
    private void chooseLanguageForHomePage() throws IllegalArgumentException, InterruptedException {
        openPage.clickOnLanguageIcon();
        Thread.sleep(15);
        openPage.selectEnglishLanguage();
    }

    @Test(priority = 1, enabled = true)
    @Description("Check for the searched value is successfully open ")
    @Severity(SeverityLevel.BLOCKER)
    private void searchingForData() throws IllegalArgumentException, InterruptedException {
        openPage.clickOnSearchIcon();
        openPage.setTheSearchValue();
        openPage.clickOnSearchButton();
        softAssert.assertTrue(openPage.getFirstLessonTitle().contains("Addition"));
        openPage.clickOnSecondLesson();
        softAssert.assertTrue(openPage.getSecondLessonTitle().contains("Lesson: Addition Polymerization"));
        softAssert.assertAll();
    }

    @Test(priority = 2, enabled = true)
    @Description("Select a language for the home page from language dropdown list")
    @Severity(SeverityLevel.BLOCKER)
    private void openLessonWorksheet() throws IllegalArgumentException, InterruptedException {
        openPage.clickOnSearchIcon();
        openPage.setTheSearchValue();
        openPage.clickOnSearchButton();
        softAssert.assertTrue(openPage.getFirstLessonTitle().contains("Addition"));
        openPage.clickOnSecondLesson();
        softAssert.assertTrue(openPage.getSecondLessonTitle().contains("Lesson: Addition Polymerization"));
        openPage.clickOnWorksheetButton();
        softAssert.assertTrue(openPage.getWorksheetPageTitle().contains("Lesson Worksheet: Addition Polymerization"));
        softAssert.assertAll();
    }

    @Test(priority = 3, enabled = true)
    @Description("Check the number of questions at worksheet page")
    @Severity(SeverityLevel.BLOCKER)
    private void numberOfQuestions() throws IllegalArgumentException, InterruptedException {
        openPage.clickOnSearchIcon();
        openPage.setTheSearchValue();
        openPage.clickOnSearchButton();
        softAssert.assertTrue(openPage.getFirstLessonTitle().contains("Addition"));
        openPage.clickOnSecondLesson();
        softAssert.assertTrue(openPage.getSecondLessonTitle().contains("Lesson: Addition Polymerization"));
        openPage.clickOnWorksheetButton();
        softAssert.assertTrue(openPage.getWorksheetPageTitle().contains("Lesson Worksheet: Addition Polymerization"));
        openPage.getTheNumberOfQuestions();
        softAssert.assertEquals(openPage.getTheNumberOfQuestions(),10);
        softAssert.assertAll();
    }
}




